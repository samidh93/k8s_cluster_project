{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "todo-app.name" . }}-postgres
  namespace: {{ .Values.global.environment }}-todo-app
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    app: todo-postgres
    component: database
spec:
  replicas: {{ .Values.postgres.replicas | default 1 }}
  selector:
    matchLabels:
      app: todo-postgres
      component: database
  template:
    metadata:
      labels:
        {{- include "todo-app.labels" . | nindent 8 }}
        app: todo-postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        ports:
        - containerPort: 5432
          name: postgres
        env:
        {{- range $key, $value := .Values.postgres.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.postgres.resources | nindent 10 }}
        {{- if .Values.postgres.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.postgres.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.postgres.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.postgres.readinessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.postgres.persistence.enabled }}
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        {{- end }}
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-scripts
        configMap:
          name: {{ include "todo-app.name" . }}-init-scripts
      {{- if .Values.postgres.persistence.enabled }}
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ include "todo-app.name" . }}-postgres-pvc
      {{- end }}
{{- end }}
