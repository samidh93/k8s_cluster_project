{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "todo-app.name" . }}-nginx-config
  namespace: {{ .Values.global.environment }}-todo-app
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    app: todo-nginx
    component: nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log  /var/log/nginx/access.log  main;
        error_log   /var/log/nginx/error.log;
        
        sendfile        on;
        tcp_nopush     on;
        tcp_nodelay    on;
        keepalive_timeout  65;
        types_hash_max_size 2048;
        
        upstream backend {
            server {{ include "todo-app.name" . }}-backend:8080;
        }
        
        upstream frontend {
            server {{ include "todo-app.name" . }}-frontend:80;
        }
        
        server {
            listen 80;
            server_name localhost;
            
            # Frontend routes
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Backend API routes
            location /api/ {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Backend actuator routes
            location /actuator/ {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
{{- end }}
