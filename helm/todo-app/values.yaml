# Default values for todo-app
# This is a YAML-formatted file.

# Global configuration
global:
  environment: development
  imageRegistry: ghcr.io
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []

# Application configuration
app:
  name: todo-app
  version: "1.0.0"
  replicas:
    frontend: 2
    backend: 2
    nginx: 2
    postgres: 1

# Frontend configuration
frontend:
  enabled: true
  image:
    repository: samidh93/todo-frontend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Backend configuration
backend:
  enabled: true
  image:
    repository: samidh93/todo-backend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 3
  env:
    SPRING_PROFILES_ACTIVE: development
    SPRING_DATASOURCE_URL: jdbc:postgresql://todo-app-postgres:5432/tododb
    SPRING_DATASOURCE_USERNAME: postgres
    SPRING_DATASOURCE_PASSWORD: postgres123
    SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    SPRING_JPA_SHOW_SQL: "false"

# Nginx configuration
nginx:
  enabled: true
  image:
    repository: samidh93/todo-nginx
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# PostgreSQL configuration
postgres:
  enabled: true
  replicas: 1
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  env:
    POSTGRES_DB: tododb
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres123
    POSTGRES_INITDB_ARGS: "--data-checksums"
  livenessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
        - -d
        - tododb
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
        - -d
        - tododb
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: todo.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: todo-nginx
              port:
                number: 80
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: todo-backend
              port:
                number: 8080
        - path: /actuator
          pathType: Prefix
          backend:
            service:
              name: todo-backend
              port:
                number: 8080

# HPA configuration
hpa:
  enabled: true
  backend:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 15

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
  grafana:
    enabled: true
    dashboards:
      enabled: true

# Security configuration
security:
  enabled: true
  serviceAccounts:
    create: true
    annotations: {}
  rbac:
    create: true
  networkPolicies:
    enabled: true
  podSecurityStandards:
    enabled: true
    level: baseline

# Backup configuration
backup:
  enabled: true
  database:
    schedule: "0 2 * * *"  # Daily at 2 AM
    retention: 7  # Keep for 7 days
  application:
    schedule: "0 3 * * *"  # Daily at 3 AM
    retention: 30  # Keep for 30 days

# Feature flags
featureFlags:
  enabled: true
  newTodoUI: false
  advancedSearch: false
  darkMode: false
  notifications: false
