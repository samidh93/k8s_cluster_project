# Enhanced Secrets with better security practices
apiVersion: v1
kind: Secret
metadata:
  name: todo-enhanced-secrets
  namespace: todo-app
  labels:
    app: todo-app
    environment: development
    version: v1
  annotations:
    # Encrypt secrets at rest (if encryption is enabled)
    encryption.k8s.io/algorithm: "AES"
    # Auto-rotation annotation
    secret.kubernetes.io/rotation: "true"
type: Opaque
data:
  # Database credentials (base64 encoded)
  db.username: cG9zdGdyZXM=  # postgres
  db.password: cG9zdGdyZXM=  # postgres
  
  # Application secrets
  app.secret.key: dG9kby1hcHAtc2VjcmV0LWtleS1kZXY=  # todo-app-secret-key-dev
  jwt.secret: dG9kby1hcHAtand0LXNlY3JldC1kZXY=        # todo-app-jwt-secret-dev
  
  # Redis password (if using Redis)
  redis.password: cmVkaXMtcGFzc3dvcmQ=                 # redis-password
  
  # API keys (for external services)
  external.api.key: ZXh0ZXJuYWwtYXBpLWtleS1kZXY=      # external-api-key-dev
  
  # SSL/TLS certificates (if using HTTPS)
  tls.crt: ""  # Base64 encoded certificate
  tls.key: ""  # Base64 encoded private key
---
# Secret for monitoring credentials
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: monitoring
  labels:
    app: monitoring
    purpose: observability
    environment: development
type: Opaque
data:
  # Grafana admin password
  grafana.admin.password: YWRtaW4=  # admin
  
  # Prometheus basic auth
  prometheus.username: cHJvbWV0aGV1cw==  # prometheus
  prometheus.password: cHJvbWV0aGV1cy1wYXNz  # prometheus-pass
