apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"app","environment":"development","version":"v1"},"name":"app","namespace":"app"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"app","environment":"development"}},"template":{"metadata":{"labels":{"app":"app","environment":"development","version":"v1"}},"spec":{"containers":[{"env":[{"name":"APP_NAME","valueFrom":{"configMapKeyRef":{"key":"app.name","name":"app-config"}}},{"name":"APP_VERSION","valueFrom":{"configMapKeyRef":{"key":"app.version","name":"app-config"}}},{"name":"DB_HOST","valueFrom":{"configMapKeyRef":{"key":"db.host","name":"app-config"}}},{"name":"DB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"db.password","name":"app-secrets"}}}],"image":"nginx:alpine","livenessProbe":{"httpGet":{"path":"/health","port":80},"initialDelaySeconds":30,"periodSeconds":10},"name":"app","ports":[{"containerPort":80}],"readinessProbe":{"httpGet":{"path":"/health","port":80},"initialDelaySeconds":5,"periodSeconds":5},"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"250m","memory":"64Mi"}},"volumeMounts":[{"mountPath":"/usr/share/nginx/html/data","name":"app-data"},{"mountPath":"/etc/nginx/conf.d","name":"app-config"},{"mountPath":"/etc/app/secrets","name":"app-secrets","readOnly":true}]}],"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data-pvc"}},{"configMap":{"name":"app-config"},"name":"app-config"},{"name":"app-secrets","secret":{"secretName":"app-secrets"}}]}}}}
  creationTimestamp: "2025-08-23T19:35:25Z"
  generation: 1
  labels:
    app: app
    environment: development
    version: v1
  name: app
  namespace: app
  resourceVersion: "40591"
  uid: 26ae93e9-076b-4f79-b00e-23615ea14e74
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: app
      environment: development
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app
        environment: development
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - env:
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              key: app.name
              name: app-config
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              key: app.version
              name: app-config
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: db.host
              name: app-config
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: app-secrets
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: app
        ports:
        - containerPort: 80
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/nginx/html/data
          name: app-data
        - mountPath: /etc/nginx/conf.d
          name: app-config
        - mountPath: /etc/app/secrets
          name: app-secrets
          readOnly: true
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:0.11.0
        args:
        - -nginx.scrape-uri=http://localhost/nginx_status
        ports:
        - containerPort: 9113
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 32Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - configMap:
          defaultMode: 420
          name: app-config
        name: app-config
      - name: app-secrets
        secret:
          defaultMode: 420
          secretName: app-secrets
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-08-23T19:35:33Z"
    lastUpdateTime: "2025-08-23T19:35:33Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-08-23T19:35:25Z"
    lastUpdateTime: "2025-08-23T19:35:33Z"
    message: ReplicaSet "app-668f576c9c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
